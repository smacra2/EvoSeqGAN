import numpy as np
import matplotlib.pyplot as plt
import csv
plt.rcParams['agg.path.chunksize'] = 10000


# Utility to plot wasserstein_loss and total_loss (with gradient penalty) from many console_output files,
# given as input in order of oldest to most recent output
def plot_loss(list_input_file_names):

    w_loss = []
    t_loss = []
    for file in list_input_file_names:
        f = open(file)
        reader = f.readlines()
        f.close()
        for i in range(len(reader)):
        # for i in range(150):
            tmp = reader[i]

            val = tmp.find('Wasserstein Loss')
            if val != -1:
                temp = []
                k = 18
                temp.append(tmp[val + k])
                while tmp[val + k + 1] != ' ':
                    k += 1
                    temp.append(tmp[val + k])
                print(''.join(temp))
                w_loss.append(float(''.join(temp)))

            val = tmp.find('Total Loss To Minimize')
            if val != -1:
                temp = []
                k = 24
                temp.append(tmp[val + k])
                while tmp[val + k + 1] != ' ':
                    k += 1
                    temp.append(tmp[val + k])
                print(''.join(temp))
                t_loss.append(float(''.join(temp)))

        print()

    # Clip extreme values for readability
    clip_val = 20
    for i in range(len(w_loss)):
        if w_loss[i] < -clip_val:
            w_loss[i] = -clip_val
        elif w_loss[i] > clip_val:
            w_loss[i] = clip_val
    for i in range(len(t_loss)):
        if t_loss[i] < -clip_val:
            t_loss[i] = -clip_val
        elif t_loss[i] > clip_val:
            t_loss[i] = clip_val

    x_w = range(len(w_loss))
    x_t = range(len(t_loss))
    # print(w_loss)
    # print(t_loss)

    plt.figure(figsize=(12., 9.), dpi=300)
    plt.plot(x_w, w_loss, c='#377eb8', linewidth=0.5, alpha=0.7)
    # plt.axis('equal')
    plt.xlabel('Iteration')
    plt.ylabel('Loss')
    # plt.legend(['wasserstein loss', 'wasserstein loss + gradient penalty'])
    plt.title('Wasserstein Loss versus Sampled Iteration')
    plt.savefig('cwgan_wloss.png')
    plt.close()

    plt.figure(figsize=(12., 9.), dpi=300)
    plt.plot(x_t, t_loss, c='#ff7f00', linewidth=0.5, alpha=0.7)
    # plt.axis('equal')
    plt.xlabel('Iteration')
    plt.ylabel('Loss')
    # plt.legend(['wasserstein loss', 'wasserstein loss + gradient penalty'])
    plt.title('Wasserstein Loss + Gradient Penalty versus Sampled Iteration')
    plt.savefig('cwgan_wlossgp.png')
    plt.close()


# Utility to plot divergence values, takes values from manually populated list since not easily auto-generated
# tri, di, single values are on y-axis, time points on x-axis
def plot_divergence(tri_values, di_values, single_values, time_points):
    plt.figure(figsize=(12., 9.), dpi=300)
    plt.plot(time_points, tri_values, c='#377eb8', marker='o', linewidth=1, alpha=0.7)
    plt.plot(time_points, di_values, c='#ff7f00', marker='s', linewidth=1, alpha=0.7)
    plt.plot(time_points, single_values, c='#4daf4a', marker='d', linewidth=1, alpha=0.7)
    # plt.axis('equal')
    plt.xlabel('Iteration')
    plt.ylabel('K-L Divergence')
    plt.legend(['Trinucleotides', 'Dinucleotides', 'Single Nucleotides'])
    plt.title('K-L Divergence versus Sampled Iteration')
    plt.savefig('cwgan_divergence.png')
    plt.close()

# ['#377eb8', '#ff7f00', '#4daf4a', '#f781bf', '#a65628']
# ['o', 's', 'd', '*', 'P']


if __name__ == "__main__":

    # plot_loss(['Models/6a_1e-4_5e-4_100_32_1_48/console/console_out_1.txt', 'Models/6a_1e-4_5e-4_100_32_1_48/console/console_out_2.txt',
    #            'Models/6a_1e-4_5e-4_100_32_1_48/console/console_out_3a.txt', 'Models/6a_1e-4_5e-4_100_32_1_48/console/console_out_3b.txt'])
    # 20, 1100, 660, 940

    # plot_loss(['Models/6c_bi_1e-4_5e-4_100_32_1_48/console/console_out_1.txt', 'Models/6c_bi_1e-4_5e-4_100_32_1_48/console/console_out_2.txt',
    #            'Models/6c_bi_1e-4_5e-4_100_32_1_48/console/console_out_3a.txt', 'Models/6c_bi_1e-4_5e-4_100_32_1_48/console/console_out_3b.txt',
    #            'Models/6c_bi_1e-4_5e-4_100_32_1_48/console/console_out_3c.txt'])
    # 20, 1000, 640, 70, 730

    # plot_loss(['Models/5b_indels_1e-4_3e-4_100_32_1_48/console/console_out_1.txt', 'Models/5b_indels_1e-4_3e-4_100_32_1_48/console/console_out_2.txt',
    #            'Models/5b_indels_1e-4_3e-4_100_32_1_48/console/console_out_3.txt'])
    # 36, 300, 2540


    # 6a
    # tri = [0.061491605823156374, 0.05878691034379624, 0.1575567161715504, 0.08286101838848103, 0.06428863613437391, 0.6117910814423492, 0.06311496244796917, 0.07268883349772085, 0.45542517869576554, 0.06281368463952393, 0.10863097852163774, 0.04848011784976519, 0.3976122947015153, 0.11093524768487066]
    # di = [0.03165462473341502, 0.030995767312374363, 0.07960192078898773, 0.051079369335526585, 0.031606881606640866, 0.370070230255853, 0.03254484141448035, 0.04757639414573818, 0.2640137039886952, 0.03475176471826006, 0.06435364294431192, 0.02950326547203929, 0.2560358920717725, 0.05934773081014785]
    # single = [0.008685183928304342, 0.008972797878744308, 0.020496502104455208, 0.021781631192685735, 0.0073384716273095, 0.1529482142339977, 0.007932797794079556, 0.02313553930689895, 0.0985644532124213, 0.011072662803443465, 0.024484682382078522, 0.012562509878297781, 0.11383807085461624, 0.016486435302257046]
    # time_pts = [9, 149, 279, 349, 500, 609, 699, 789, 869, 989, 1109, 1269, 1399, 1539]

    # tri = [0.08535842589963724, 0.16322775156249322, 0.08535842589963724, 0.08535842589963724, 0.09348889967916685, 0.06898797090148798]
    # di = [0.057230958304736346, 0.0900113524327731, 0.057230958304736346, 0.057230958304736346, 0.052212654573338665, 0.044396017846138336]
    # single = [0.02885411574557216, 0.03430791732644938, 0.02885411574557216, 0.02885411574557216, 0.01860083431508324, 0.021106964112337867]
    # time_pts = [19, 109, 349, 599, 849, 1199]

    # tri = [8.667114475661633, 0.08535842589963724]
    # di = [6.665107819864241, 0.057230958304736346]
    # single = [3.598969751238857, 0.02885411574557216]
    # time_pts = [0, 19]

    # 6c
    # tri = [0.09483769666237923, 0.08524563544596178, 0.08118127838061358, 0.06130884976546824, 0.09104183231975424, 0.062141332754123535, 0.08525160645002468, 0.07738594211844707, 0.08542047891694157, 0.08449802353251795, 0.08143514529015106, 0.0847406998192546, 0.06566905525924066, 0.07431194785682761]
    # di = [0.05684344179225041, 0.057145679719136325, 0.053927615529734595, 0.036485479678112165, 0.05325545802135368, 0.036374608888174106, 0.05714659303948838, 0.05057317539234607, 0.05227458228908802, 0.056607116148246255, 0.05440441394714874, 0.056778216372507864, 0.042035950794823265, 0.048575504547998936]
    # single = [0.0232304201975337, 0.028805227645837678, 0.026826128732414016, 0.014396975446051532, 0.01986411781344649, 0.013392350806099646, 0.028800340828153238, 0.02434772166004053, 0.022941541991990232, 0.028508252950839426, 0.02728854175674595, 0.028599906428791295, 0.019508492062828578, 0.023421243367924675]
    # time_pts = [9, 179, 248, 321, 439, 519, 599, 709, 819, 929, 1029, 1149, 1269, 1389]

    # tri = [0.08332388209889834, 0.08431288938677943, 0.06178075555573147, 0.05788017762885861, 0.08527722798261245, 0.1052546727335139]
    # di = [0.0557889138460764, 0.05644364242440668, 0.03765440840705096, 0.03621213806295218, 0.057171097671170484, 0.06159420896081235]
    # single = [0.02807249491347806, 0.028409790899689393, 0.015158218455585876, 0.016096149250786104, 0.028820012855189293, 0.024241196646682298]
    # time_pts = [19, 109, 349, 599, 849, 1109]

    # tri = [7.82624998941182, 0.08535842589963724]
    # di = [5.966374027206905, 0.057230958304736346]
    # single = [3.1860733827150316, 0.02885411574557216]
    # time_pts = [0, 19]

    # 5b
    # Unclipped tri:
    # tri = [0.09403880892822983, 0.09797567293892659, 0.07641489969894663, 0.09152289654224906, 0.09849681887040886, 0.10109011696226795, 0.1293145306103244, 0.09688606584087688, 0.1009866633062947, 0.10434026887697183, 0.10131212283180507, 0.09406315467765927, 0.08738280760915179, 0.12933850875460598, 0.10234344864236258, 0.08193703703035417, 0.09803976215592276, 0.11873052963890006, 0.08816112089271809, 0.09152498715507525, 0.07735902949007151, 0.08507793757980177, 0.09981376038984925, 0.08487083574222454, 0.08375224507566259, 0.08600692131913806, 0.08036922180812722, 0.0756839378890374, 0.09149425363528618, 0.25915360586728703, 0.1711830392249641, 0.07983807041169816, 0.09631999006233147, 0.11926594582953495, 0.083373831173644, 0.1951813460894519, 0.08760782778609127, 0.07199234848697109, 0.0927094458657984, 0.09762274500209203, 0.0832449808244661, 0.08531767405235356, 0.08964218691843215, 0.10491335858254287, 5.048109168270603, 3.484924403521046, 2.966661440803555, 1.8673477835557468, 1.1670735908191547, 1.4621691273981503, 1.6596235431897248, 1.5874970607978518, 1.278851393645587, 0.8599763088121114, 0.10342295060434974, 0.10177134767657603, 0.1246763941267085, 0.8261091318099046, 0.10792504930521155, 0.10356444502493324, 0.10304355038379659, 0.09590089748208079, 0.09328063017853647, 0.8493025391739265]
    # di = [0.06359535086769155, 0.06804037677832375, 0.04884687676969716, 0.06049902866087016, 0.06700424000792972, 0.06982461556460332, 0.07660969768781234, 0.06358450696483901, 0.06710443642352475, 0.07282332676517686, 0.07007858224484408, 0.06401591508913947, 0.05661563262425196, 0.07807252362777749, 0.06484293971581616, 0.052614608153556536, 0.06596222564367146, 0.07598578770398746, 0.05552655692234865, 0.05858050732655063, 0.04970972501202017, 0.05429067246520396, 0.06888074815932793, 0.05249580306211576, 0.051453785012870755, 0.05662559197243305, 0.048672741086227295, 0.04858367439246811, 0.061423554312171516, 0.22533261691491913, 0.11267319606972143, 0.05172614753558981, 0.06663570604632268, 0.0769515205623745, 0.05524051077931199, 0.1620109445163578, 0.05588399372858517, 0.041923989310180314, 0.06380589113814206, 0.06742152387855221, 0.054508021280504644, 0.05457558897855152, 0.0545083246817491, 0.07328706569416857, 3.9412406174248673, 2.7799648165979756, 2.2839226071871868, 1.2969689175487333, 0.754289901663645, 0.973784695924079, 1.0902861675846371, 1.0455202972385098, 0.834076943691507, 0.534765337934109, 0.07214578778520955, 0.07085319151722334, 0.0790788917298886, 0.5258447670759047, 0.07239121629514227, 0.07214005564988933, 0.0648023364990497, 0.06406753858764255, 0.062047958174026786, 0.7820213783946102]
    # single = [0.03406524491607565, 0.03861095961652392, 0.024686133532504557, 0.032414749877593345, 0.036177665004318675, 0.038959261278765624, 0.03565684268971659, 0.03139257220256752, 0.03593612730399761, 0.04153606450479368, 0.039288358315227326, 0.03466139757079622, 0.027674783643346308, 0.0246488264088091, 0.02965926190910403, 0.025007690648197148, 0.034919143630069774, 0.03566431718211567, 0.026287435835234768, 0.029246151732665843, 0.02431312121993392, 0.02680000728375174, 0.0392101385672039, 0.024651868546386714, 0.023717625927026018, 0.029140189846352336, 0.022991002430124946, 0.024298893662207263, 0.03426011808704302, 0.1950307125603029, 0.06498684491223829, 0.025741110402594525, 0.03786638667410462, 0.039974010100283563, 0.02891608024808149, 0.13183928704286416, 0.028356725778353402, 0.016042730899370868, 0.037878094736475014, 0.03795588841916926, 0.027887399538663087, 0.027032612837640226, 0.024630969116156393, 0.041850431903038776, 2.4963430638907727, 2.0140868962068943, 1.5332109339315259, 0.622489037938938, 0.31044046897598104, 0.42943708748854825, 0.4678481531198172, 0.4484648611993798, 0.3559523410407755, 0.2091578606966783, 0.041172346738790735, 0.040357676920320974, 0.036407869471650575, 0.2381763725376788, 0.03683521442984481, 0.041073998676016986, 0.029586811687446608, 0.033870336096553634, 0.03276065902228982, 0.7246959846068128]
    # time_pts = [19, 59, 99, 139, 179, 219, 259, 299, 339, 379, 419, 459, 499, 539, 579, 619, 659, 699, 739, 779, 819, 859, 899, 939, 979, 1019, 1059, 1099, 1139, 1179, 1219, 1259, 1299, 1339, 1379, 1419, 1459, 1499, 1539, 1579, 1619, 1659, 1699, 1739, 1779, 1819, 1859, 1899, 1939, 1979, 2019, 2059, 2099, 2139, 2179, 2219, 2259, 2299, 2339, 2379, 2419, 2459, 2499, 2539]

    # tri = [0.09403880892822983, 0.09797567293892659, 0.07641489969894663, 0.09152289654224906, 0.09849681887040886, 0.10109011696226795, 0.1293145306103244, 0.09688606584087688, 0.1009866633062947, 0.10434026887697183, 0.10131212283180507, 0.09406315467765927, 0.08738280760915179, 0.12933850875460598, 0.10234344864236258, 0.08193703703035417, 0.09803976215592276, 0.11873052963890006, 0.08816112089271809, 0.09152498715507525, 0.07735902949007151, 0.08507793757980177, 0.09981376038984925, 0.08487083574222454, 0.08375224507566259, 0.08600692131913806, 0.08036922180812722, 0.0756839378890374, 0.09149425363528618, 0.25915360586728703, 0.1711830392249641, 0.07983807041169816, 0.09631999006233147, 0.11926594582953495, 0.083373831173644, 0.1951813460894519, 0.08760782778609127, 0.07199234848697109, 0.0927094458657984, 0.09762274500209203, 0.0832449808244661, 0.08531767405235356, 0.08964218691843215, 0.10491335858254287, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.8599763088121114, 0.10342295060434974, 0.10177134767657603, 0.1246763941267085, 0.8261091318099046, 0.10792504930521155, 0.10356444502493324, 0.10304355038379659, 0.09590089748208079, 0.09328063017853647, 0.8493025391739265]
    # di = [0.06359535086769155, 0.06804037677832375, 0.04884687676969716, 0.06049902866087016, 0.06700424000792972, 0.06982461556460332, 0.07660969768781234, 0.06358450696483901, 0.06710443642352475, 0.07282332676517686, 0.07007858224484408, 0.06401591508913947, 0.05661563262425196, 0.07807252362777749, 0.06484293971581616, 0.052614608153556536, 0.06596222564367146, 0.07598578770398746, 0.05552655692234865, 0.05858050732655063, 0.04970972501202017, 0.05429067246520396, 0.06888074815932793, 0.05249580306211576, 0.051453785012870755, 0.05662559197243305, 0.048672741086227295, 0.04858367439246811, 0.061423554312171516, 0.22533261691491913, 0.11267319606972143, 0.05172614753558981, 0.06663570604632268, 0.0769515205623745, 0.05524051077931199, 0.1620109445163578, 0.05588399372858517, 0.041923989310180314, 0.06380589113814206, 0.06742152387855221, 0.054508021280504644, 0.05457558897855152, 0.0545083246817491, 0.07328706569416857, 1.0, 1.0, 1.0, 1.0, 0.754289901663645, 0.973784695924079, 1.0, 1.0, 0.834076943691507, 0.534765337934109, 0.07214578778520955, 0.07085319151722334, 0.0790788917298886, 0.5258447670759047, 0.07239121629514227, 0.07214005564988933, 0.0648023364990497, 0.06406753858764255, 0.062047958174026786, 0.7820213783946102]
    # single = [0.03406524491607565, 0.03861095961652392, 0.024686133532504557, 0.032414749877593345, 0.036177665004318675, 0.038959261278765624, 0.03565684268971659, 0.03139257220256752, 0.03593612730399761, 0.04153606450479368, 0.039288358315227326, 0.03466139757079622, 0.027674783643346308, 0.0246488264088091, 0.02965926190910403, 0.025007690648197148, 0.034919143630069774, 0.03566431718211567, 0.026287435835234768, 0.029246151732665843, 0.02431312121993392, 0.02680000728375174, 0.0392101385672039, 0.024651868546386714, 0.023717625927026018, 0.029140189846352336, 0.022991002430124946, 0.024298893662207263, 0.03426011808704302, 0.1950307125603029, 0.06498684491223829, 0.025741110402594525, 0.03786638667410462, 0.039974010100283563, 0.02891608024808149, 0.13183928704286416, 0.028356725778353402, 0.016042730899370868, 0.037878094736475014, 0.03795588841916926, 0.027887399538663087, 0.027032612837640226, 0.024630969116156393, 0.041850431903038776, 1.0, 1.0, 1.0, 0.622489037938938, 0.31044046897598104, 0.42943708748854825, 0.4678481531198172, 0.4484648611993798, 0.3559523410407755, 0.2091578606966783, 0.041172346738790735, 0.040357676920320974, 0.036407869471650575, 0.2381763725376788, 0.03683521442984481, 0.041073998676016986, 0.029586811687446608, 0.033870336096553634, 0.03276065902228982, 0.7246959846068128]
    # time_pts = [19, 59, 99, 139, 179, 219, 259, 299, 339, 379, 419, 459, 499, 539, 579, 619, 659, 699, 739, 779, 819, 859, 899, 939, 979, 1019, 1059, 1099, 1139, 1179, 1219, 1259, 1299, 1339, 1379, 1419, 1459, 1499, 1539, 1579, 1619, 1659, 1699, 1739, 1779, 1819, 1859, 1899, 1939, 1979, 2019, 2059, 2099, 2139, 2179, 2219, 2259, 2299, 2339, 2379, 2419, 2459, 2499, 2539]

    # tri = [0.08819007239861816, 0.08955631500287012, 0.08484047160289035, 0.08215433834894222, 0.08131120901189451, 0.07472720683638867, 0.07934027115609411, 0.0796104987489484]
    # di = [0.05777053510585914, 0.059544670366984104, 0.05485767001648764, 0.053872442599691255, 0.052453277332979706, 0.04837603725644591, 0.051366591568725216, 0.052180240784034666]
    # single = [0.029312310268376614, 0.03090545644764641, 0.027437401671582207, 0.027600144782422, 0.026055953176297372, 0.024099770586637034, 0.025421410792694152, 0.026456621484855808]
    # time_pts = [19, 59, 99, 139, 179, 219, 259, 299]

    tri = [0.1050361957007125, 0.09454882511825034]
    di = [0.07338730318405459, 0.06387196014093564]
    single = [0.041914532276343855, 0.034450045105023724]
    time_pts = [0, 19]

    plot_divergence(tri, di, single, time_pts)

